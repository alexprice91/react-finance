{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","random","onAddExpense","DUMMY_DATA","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d367d6bb.chunk.js","sourcesContent":["import React from 'react';\nimport './Card.css';\n\nconst Card = (props) => {\nconst classes = 'card ' + props.className;\n\nreturn <div className={classes}>{props.children}</div>\n}\n\nexport default Card;","import \"./ExpensesFilter.css\";\nimport React from \"react\";\n\nconst ExpensesFilter = (props) => {\n\n  /* Handles the date selection, accepts event as an argument, passes the data up to onChangeFilter which is a prop\n  within the rendered ExpensesFilter in Expenses.js. value \n  \n\n  */\n  const dateChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dateChangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from 'react';\nimport './ExpenseDate.css'\n\nconst ExpenseDate = (props) => {\n    const month = props.date.toLocaleString('en-US', { month: \"long\" });\n    const day = props.date.toLocaleString('en-US', { day: \"2-digit\" });\n    const year = props.date.getFullYear();\n\n    return (\n        <div className=\"expense-date\">\n        <div className=\"expense-date__month\">{month}</div>\n        <div className=\"expense-date__year\">{year}</div>\n        <div className=\"expense-date__day\">{day}</div>\n      </div>\n    )\n}\n\nexport default ExpenseDate","import React from \"react\";\nimport \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item_description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item_price\">Â£{props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\n\nimport ExpenseItem from './ExpenseItem'\nimport './ExpensesList.css'\n\nconst ExpensesList = (props) => {\n\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>\n  }\n\n  return <ul className=\"expenses-list\">\n    {props.items.map((expense) => (\n      <ExpenseItem\n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date}\n      />\n    ))}\n</ul>\n};\n\n\n\nexport default ExpensesList;\n","import React from 'react';\n\nimport './ChartBar.css';\n\nconst ChartBar = (props) => {\n  let barFillHeight = '0%';\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n  }\n\n  return (\n    <div className='chart-bar'>\n      <div className='chart-bar__inner'>\n        <div\n          className='chart-bar__fill'\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className='chart-bar__label'>{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from 'react';\n\nimport ChartBar from './ChartBar';\nimport './Chart.css';\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className='chart'>\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from 'react'\n\nimport Chart from '../Chart/Chart'\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n      { label: 'Jan', value: 0 },\n      { label: 'Feb', value: 0 },\n      { label: 'Mar', value: 0 },\n      { label: 'Apr', value: 0 },\n      { label: 'May', value: 0 },\n      { label: 'Jun', value: 0 },\n      { label: 'Jul', value: 0 },\n      { label: 'Aug', value: 0 },\n      { label: 'Sep', value: 0 },\n      { label: 'Oct', value: 0 },\n      { label: 'Nov', value: 0 },\n      { label: 'Dec', value: 0 },\n  ];\n\n  for(const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); // Starting at 0 => January => 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n    return <Chart dataPoints={chartDataPoints} />\n}\n\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\n\nimport \"./Expenses.css\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesList from './ExpensesList';\nimport ExpensesChart from './ExpensesChart';\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  /* filter creates a new array with all elements that pass the test in the function, \n     props.items accesses props in data array. expense argument .date.getFullYeat - returns the year\n     of the specified date. toString then makes it a string eg: '2019'. filteredYear is then selected as prop.\n  */\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          onChangeFilter={filterChangeHandler}\n          selected={filteredYear}\n        />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList items={filteredExpenses} />\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\n\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n\n  const expenseData = {\n    title: enteredTitle,\n    amount: +enteredAmount,\n    date: new Date(enteredDate),\n  };\n\n  props.onSaveExpenseData(expenseData);\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n};\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n      <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n  const [isEditing, setIsEditing] = useState(false)\n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n        ...enteredExpenseData,\n        id: Math.random().toString()\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  }\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  }\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  }\n\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\n      {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler} />}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React, { useState } from 'react';\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst DUMMY_DATA = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_DATA);\n\n  const addExpenseHandler = expense => {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses]\n    });\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}